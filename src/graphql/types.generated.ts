// eslint-disable
// ⚠️ DO NOT EDIT ⚠️
// This file is automatically generated, run npm run generate to update

export type Maybe<T> = T | null
export type InputMaybe<T> = Maybe<T>
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K]
}
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>
}
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>
}
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string
  String: string
  Boolean: boolean
  Int: number
  Float: number
  Date: any
}

export type Business = {
  __typename?: 'Business'
  about?: Maybe<Scalars['String']>
  createdAt?: Maybe<Scalars['Date']>
  id?: Maybe<Scalars['ID']>
  location?: Maybe<Scalars['String']>
  name?: Maybe<Scalars['String']>
  owner?: Maybe<User>
  rating?: Maybe<Scalars['Int']>
  reviews?: Maybe<Array<Maybe<Review>>>
  updatedAt?: Maybe<Scalars['Date']>
}

export type CreateBusinessInput = {
  about?: InputMaybe<Scalars['String']>
  location?: InputMaybe<Scalars['String']>
  name?: InputMaybe<Scalars['String']>
}

export type CreateReviewInput = {
  businessID?: InputMaybe<Scalars['String']>
  rating?: InputMaybe<Scalars['Int']>
  text?: InputMaybe<Scalars['String']>
}

export type EditBusinessInput = {
  about?: InputMaybe<Scalars['String']>
  location?: InputMaybe<Scalars['String']>
  name?: InputMaybe<Scalars['String']>
}

export type EditReviewInput = {
  rating?: InputMaybe<Scalars['Int']>
  text?: InputMaybe<Scalars['String']>
}

export type Mutation = {
  __typename?: 'Mutation'
  createBusiness?: Maybe<Review>
  createReview?: Maybe<Review>
  deleteBusiness?: Maybe<Scalars['Boolean']>
  deleteReview?: Maybe<Scalars['Boolean']>
  editBusiness?: Maybe<Review>
  editReview?: Maybe<Review>
}

export type MutationCreateBusinessArgs = {
  data?: InputMaybe<CreateBusinessInput>
}

export type MutationCreateReviewArgs = {
  data: CreateReviewInput
}

export type MutationDeleteBusinessArgs = {
  id: Scalars['ID']
}

export type MutationDeleteReviewArgs = {
  id: Scalars['ID']
}

export type MutationEditBusinessArgs = {
  data?: InputMaybe<EditBusinessInput>
  id: Scalars['ID']
}

export type MutationEditReviewArgs = {
  data?: InputMaybe<EditReviewInput>
  id: Scalars['ID']
}

export type Query = {
  __typename?: 'Query'
  business?: Maybe<Business>
  review?: Maybe<Review>
  user?: Maybe<User>
}

export type QueryBusinessArgs = {
  id: Scalars['String']
}

export type QueryReviewArgs = {
  id: Scalars['String']
}

export type QueryUserArgs = {
  id: Scalars['String']
}

export type Review = {
  __typename?: 'Review'
  business?: Maybe<Business>
  createdAt?: Maybe<Scalars['Date']>
  id?: Maybe<Scalars['ID']>
  rating?: Maybe<Scalars['Int']>
  text?: Maybe<Scalars['String']>
  updatedAt?: Maybe<Scalars['Date']>
  user?: Maybe<User>
}

export type User = {
  __typename?: 'User'
  createdAt?: Maybe<Scalars['Date']>
  email?: Maybe<Scalars['String']>
  id?: Maybe<Scalars['ID']>
  image?: Maybe<Scalars['String']>
  name?: Maybe<Scalars['String']>
  updatedAt?: Maybe<Scalars['Date']>
}
